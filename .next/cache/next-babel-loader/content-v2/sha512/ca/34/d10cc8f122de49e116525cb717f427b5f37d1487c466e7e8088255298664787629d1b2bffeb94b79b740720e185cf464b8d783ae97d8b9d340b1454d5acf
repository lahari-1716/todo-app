{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\lahari\\\\Documents\\\\my-todo-app\\\\pages\\\\index.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport './styles.css';\nimport ListItems from './auth';\n\nvar Newtodos = /*#__PURE__*/function (_React$Component) {\n  _inherits(Newtodos, _React$Component);\n\n  var _super = _createSuper(Newtodos);\n\n  function Newtodos(props) {\n    var _this;\n\n    _classCallCheck(this, Newtodos);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleInput\", function (e) {\n      _this.setState({\n        currentItem: {\n          text: e.currentTarget.value,\n          key: Date.now()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addItem\", function (e) {\n      e.preventDefault();\n      var newItem = _this.state.currentItem;\n\n      if (newItem.text !== \"\") {\n        var newItems = [].concat(_toConsumableArray(_this.state.items), [newItem]);\n\n        _this.setState({\n          items: newItems,\n          currentItem: {\n            text: '',\n            key: ''\n          }\n        });\n      }\n    });\n\n    _this.state = {\n      items: [],\n      currentItem: {\n        text: '',\n        key: ''\n      }\n    };\n    _this.handleInput = _this.handleInput.bind(_assertThisInitialized(_this));\n    _this.addItem = _this.addItem.bind(_assertThisInitialized(_this));\n    _this.deleteItem = _this.deleteItem.bind(_assertThisInitialized(_this));\n    _this.setUpdate = _this.setUpdate.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Newtodos, [{\n    key: \"deleteItem\",\n    value: function deleteItem(key) {\n      var filteredItems = this.state.items.filter(function (item) {\n        return item.key !== key;\n      });\n      this.setState({\n        items: filteredItems\n      });\n    }\n  }, {\n    key: \"setUpdate\",\n    value: function setUpdate(text, key) {\n      var items = this.state.items; // eslint-disable-next-line \n\n      items.map(function (item) {\n        if (item.key === key) {\n          item.text = text;\n        }\n      });\n      this.setState({\n        items: items\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            id: \"to-do-form\",\n            onSubmit: this.addItem,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"What about today?\",\n              value: this.state.currentItem.text,\n              onChange: this.handleInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ListItems, {\n          items: this.state.items,\n          deleteItem: this.deleteItem,\n          setUpdate: this.setUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 8\n      }, this);\n    }\n  }]);\n\n  return Newtodos;\n}(React.Component);\n\nexport default Newtodos;","map":{"version":3,"sources":["C:/Users/lahari/Documents/my-todo-app/pages/index.tsx"],"names":["React","ListItems","Newtodos","props","e","setState","currentItem","text","currentTarget","value","key","Date","now","preventDefault","newItem","state","newItems","items","handleInput","bind","addItem","deleteItem","setUpdate","filteredItems","filter","item","map","Component"],"mappings":"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","sourcesContent":["\r\nimport React  from 'react';\r\nimport './styles.css';\r\n\r\nimport ListItems from './auth';\r\n\r\ntype MyProps={\r\n  items:any;\r\n  currentItem:{text:any, key:any}\r\n}\r\ntype MyState={\r\n  items:any;\r\n  currentItem:{text:any, key:any}\r\n}\r\n\r\nclass Newtodos extends React.Component<MyProps,MyState>{\r\n    constructor(props:MyProps){\r\n      super(props);\r\n      this.state={ items:[],\r\n       currentItem:{ text:'',key:''}\r\n     }\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.setUpdate = this.setUpdate.bind(this);\r\n    }\r\n   \r\n    handleInput=(e: React.FormEvent<HTMLInputElement>): void =>{\r\n      this.setState({\r\n       currentItem:{\r\n         text:e.currentTarget.value,\r\n         key:Date.now()\r\n       }\r\n      })\r\n    }\r\n    //https://medium.com/swlh/convert-your-javascript-react-app-to-typescript-the-easy-guide-631592dc1876\r\n    \r\n    addItem=(e: React.FormEvent<HTMLFormElement>): void =>{\r\n      e.preventDefault();\r\n      const newItem = this.state.currentItem;\r\n      if(newItem.text!==\"\"){\r\n        const newItems=[...this.state.items, newItem];\r\n        this.setState({\r\n          items:newItems,\r\n          currentItem:{\r\n            text:'',\r\n            key:''\r\n          }\r\n        })\r\n      }\r\n    }\r\n   \r\n    deleteItem(key:any){\r\n      const filteredItems = this.state.items.filter((item: { key: any; }) => item.key!==key);\r\n      this.setState({\r\n        items:filteredItems\r\n      })\r\n    }\r\n   \r\n   \r\n    setUpdate(text:any, key:any){\r\n      const items = this.state.items;// eslint-disable-next-line \r\n      items.map((item: { key: any; text: any; }) =>{\r\n        if(item.key===key){\r\n          item.text=text;\r\n        }\r\n      })\r\n   \r\n      this.setState({\r\n       items:items\r\n      })\r\n    }\r\n   \r\n   render(){\r\n     return(\r\n       <div  className=\"App\">\r\n        <header>\r\n         <form id='to-do-form' onSubmit={this.addItem}> \r\n          <input type=\"text\"  placeholder=\"What about today?\" value={this.state.currentItem.text} onChange={this.handleInput}/>\r\n          <button type=\"submit\">Add</button>\r\n         </form>\r\n       </header> \r\n       <ListItems  items={this.state.items}  deleteItem={this.deleteItem} setUpdate={this.setUpdate}></ListItems>\r\n       </div>\r\n     );\r\n    \r\n     }\r\n    \r\n     \r\n   }\r\n\r\n  \r\n\r\n   export default Newtodos;\r\n\r\n"]},"metadata":{},"sourceType":"module"}